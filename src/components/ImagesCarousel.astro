---
import { Image } from "astro:assets";

interface Props {
  images: ImageMetadata[];
}

const { images } = Astro.props;
---

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const containers = document.querySelectorAll(
      ".pic-ctn",
    ) as NodeListOf<HTMLDivElement>;

    containers.forEach((container) => {
      const images = container.querySelectorAll(
        ".pic",
      ) as NodeListOf<HTMLImageElement>;
      const backAnimationTime = 0.2;
      const nextAnimationTime = 0.5;

      function resetImages() {
        images.forEach((img, i) => {
          if (i == 0) return;

          img.style.animation = `back ${backAnimationTime}s linear`;
          img.style.animationDelay = `${i * backAnimationTime}s`;

          setTimeout(
            () => {
              img.style.left = "0";
            },
            (i * backAnimationTime + backAnimationTime) * 1000,
          );
        });
      }

      images.forEach((img, i) => {
        img.addEventListener("click", () => {
          if (i === 0) {
            resetImages();
          } else {
            img.style.left = "180px";
            img.style.animation = `next ${nextAnimationTime}s linear`;
          }
        });
      });
    });
  });
</script>

<div>
  <div class="pic-ctn">
    {
      images.map((src) => (
        <Image
          src={src}
          alt="project image"
          width={180}
          height={360}
          class="pic"
        />
      ))
    }
  </div>
</div>

<style>
  @keyframes next {
    0% {
      left: 0;
    }
    30% {
      transform: rotate(15deg);
    }
    100% {
      left: 180px;
    }
  }

  @keyframes back {
    0% {
      left: 180px;
    }
    100% {
      left: 0;
    }
  }

  .pic-ctn {
    position: relative;
    width: 180px;
    height: 360px;
    overflow: hidden;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .pic {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    object-fit: cover;
    border-radius: 8px;
    cursor: pointer;
  }
</style>
